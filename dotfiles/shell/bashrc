export EDITOR="emacs -nw"

# environment variable with path to system nixpkgs
export NIXPKGS=${NIX_PATH:8}

# infinite bash history
export HISTFILESIZE=
export HISTSIZE=
export HISTFILE=~/.bash_eternal_history

fuzzy_history() {
    cat ~/.bash_eternal_history | fzf
}


inspect_environment() {
    # select an environment variable and then print it
    var=$(env | awk -F "=" '{print $1}' | fzf)
    printenv $var
}

inspect_function() {
    # select bash function and view its source
    function_name=$( declare -F | awk '{print $NF}' | fzf ) # get function name
    output_file="/tmp/$function_name.sh"
    type $function_name > $output_file # get source of function and write to output file
    sed -i '1d' $output_file # remove header
    emacs -nw $output_file
    unset function_name
    unset output_file
}


disassemble() {
    flags="--disassemble="$2" -M intel --visualize-jumps=extended-color --no-show-raw-insn --no-addresses -w"
    objdump $flags "$1" | grep -v -E 'Disassembly of section|file format|^\s*$' | c++filt
    unset flag

}


fuzzy_disassemble() {
    # select symbols using nm and fzf
    symbols=$( nm "$1" | awk '{print $(NF-1), $NF}' | grep -E '^[tT]' | awk '{print $NF}' | fzf )
    for symbol in $symbols
    do
        # disassemble each symbol
        disassemble $1 $symbol
        printf '\n'
    done
    unset symbols
}


# determine if shell is pseudoterminal
is_pseudoterminal() {
    ls -l /proc/$$/fd | grep pts > /dev/null
}

SHOW_PWD='no'

toggle_pwd() {
    if [ $SHOW_PWD == no ]
    then
        SHOW_PWD=yes
    else
        SHOW_PWD=no
    fi
}

prompt_command() {
    if [ $SHOW_PWD == yes ]
    then
        echo -ne "\033]0;$(whoami)@$(hostname):$(pwd)\007"
    else
        echo -ne "\033]0;$(whoami)@$(hostname)\007"
    fi

    # write history after each prompt
    history -a
}

prompts=(🍏 🍎 🍐 🍊 🍋 🍌 🍉 🍇 🍓 🫐 🍈 🍒 🥭 🍍 🥥 🥝 🍅 🍆 🥑 🥦 🥬 🥒 🫑 🌽 🥕 🫒 🧄)

if is_pseudoterminal
then
    size=${#prompts[@]}
    index=$(($RANDOM % $size))
    prompt=${prompts[$index]}
    PROMPT_COMMAND='prompt_command'
    PS1="${prompt} "
fi

eval "$(direnv hook bash)"
