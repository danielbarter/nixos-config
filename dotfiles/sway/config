# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
# output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
# output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#
# setting up multiple outputs
# output HDMI-A-1 resolution 1920x1080 position 0,0
# output eDP-1 resolution 1920x1080 position 0,1080

### colors

set $Background        #282a36
set $CurrentLine       #44475a
set $Selection         #44475a
set $Foreground        #f8f8f2
set $Comment           #6272a4
set $Cyan              #8be9fd
set $Green             #50fa7b
set $Orange            #ffb86c
set $Pink              #ff79c6
set $Purple            #bd93f9
set $Red               #ff5555
set $Yellow            #f1fa8c

set $menu bemenu-run \
          --fn "SourceCodePro Regular 11" \
          --line-height=25 \
          --tb=$Background \
          --tf=$Foreground \
          --fb=$Background \
          --ff=$Purple \
          --nb=$Background \
          --nf=$Foreground \
          --hb=$Background \
          --hf=$Purple \
          --sb=$Background \
          --ab=$Background \
          --af=$Foreground


output * bg $Background solid_color

client.focused            $CurrentLine   $CurrentLine     $Foreground   $Purple       $CurrentLine
client.focused_inactive   $Background    $Background      $Foreground   $Background   $Background
client.unfocused          $Background    $Background      $Foreground   $Background   $Background
client.urgent             $Red           $Red             $Foreground   $Purple       $Red


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:pointer {
    left_handed enabled
}

input type:touchpad {
    left_handed enabled
    tap enabled
    pointer_accel 1 # set mouse sensitivity (between -1 and 1)
    natural_scroll enabled
}

# xkb_options can be found in man 7 xkeyboard-config
input type:keyboard {
    xkb_layout us
    xkb_options caps:swapescape,altwin:prtsc_rwin
#   xkb_options caps:swapescape,altwin:swap_alt_win

}

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Start menu
bindsym $mod+d exec $menu

bindsym $mod+c exec grim  -g "$(slurp)" /tmp/$(date +'%H:%M:%S.png')

# Kill focused window
bindsym $mod+Shift+q kill

# set font
font pango:SourceCodePro Regular 11


bindsym XF86MonBrightnessDown exec light -U 10
bindsym XF86MonBrightnessUp   exec light -A 10
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-


# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

#
# Workspaces:
#


# pin workspaces to outputs
# since the output names are hardware dependent
# we don't bind workspaces to outputs in the config
# bind them from the shell using swaymsg, for example
# workspace 1 output eDP-1
# workspace 2 output eDP-1
# workspace 3 output eDP-1
# workspace 4 output eDP-1
# workspace 5 output eDP-1
# workspace 6 output HDMI-A-1
# workspace 7 output HDMI-A-1
# workspace 8 output HDMI-A-1
# workspace 9 output HDMI-A-1
# workspace 10 output HDMI-A-1




# Switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.


#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+backslash floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+backslash focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px


    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bar {
    position top
    status_command while python /etc/nixos/utils/status_command.py; do sleep 5; done
    height 25
    colors {
        background $Background
        statusline $Foreground
        focused_workspace $Purple $Purple $Foreground
        urgent_workspace $Red $Red $Foreground
        inactive_workspace $Background $Background $Foreground
    }
}

# Import the WAYLAND_DISPLAY env var from sway into the systemd user session, and restart some user services
# so that they have fresh environment variables
exec {
    dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
    systemctl --user stop pipewire wireplumber pipewire-pulse xdg-desktop-portal xdg-desktop-portal-wlr
    systemctl --user start pipewire wireplumber pipewire-pulse xdg-desktop-portal xdg-desktop-portal-wlr
}

# lock keybind
bindsym $mod+F1 exec 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# set cursor theme
seat seat0 xcursor_theme Dracula-cursors 24

set $gnome_schema org.gnome.desktop.interface
set $wm_schema org.gnome.desktop.wm.preferences

exec_always {
        gsettings set $gnome_schema gtk-theme 'Dracula'
        gsettings set $gnome_schema icon-theme 'Adwaita'
        gsettings set $gnome_schema cursor-theme 'Dracula-cursors'
        gsettings set $gnome_schema cursor-size 24
        gsettings set $gnome_schema document-font-name 'Source Sans Pro 11'
        gsettings set $gnome_schema font-name 'Source Sans Pro 11'
        gsettings set $gnome_schema monospace-font-name 'Source Code Pro 11'
        gsettings set $wm_schema titlebar-font 'Source Sans Pro 11'
}


# run kanshi which handles display hotswapping
# to set output scale, run swaymsg output eDP-1 enable scale 1.2
exec_always "pkill kanshi; kanshi"

# mako will auto start when a notification is sent, but it is better to start it here
# because then it picks up sway specific environment variables
exec_always "pkill mako; mako"
